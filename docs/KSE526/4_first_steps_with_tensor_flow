{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"4_first_steps_with_tensor_flow","provenance":[{"file_id":"1Bm6CJrpwVKVwiZnBQWuymmKsp1DdvhbE","timestamp":1600337275921},{"file_id":"/v2/external/notebooks/mlcc/first_steps_with_tensor_flow.ipynb","timestamp":1562743564949}],"collapsed_sections":["JndnmDMp66FL","ajVM7rkoYXeL","ci1ISxxrZ7v0"]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"JndnmDMp66FL","colab_type":"text"},"source":["#### Copyright 2017 Google LLC."]},{"cell_type":"code","metadata":{"id":"hMqWDc_m6rUC","colab_type":"code","cellView":"both","colab":{}},"source":["# Licensed under the Apache License, Version 2.0 (the \"License\");\n","# you may not use this file except in compliance with the License.\n","# You may obtain a copy of the License at\n","#\n","# https://www.apache.org/licenses/LICENSE-2.0\n","#\n","# Unless required by applicable law or agreed to in writing, software\n","# distributed under the License is distributed on an \"AS IS\" BASIS,\n","# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n","# See the License for the specific language governing permissions and\n","# limitations under the License."],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"4f3CKqFUqL2-","colab_type":"text"},"source":["# First Steps with TensorFlow"]},{"cell_type":"markdown","metadata":{"id":"Bd2Zkk1LE2Zr","colab_type":"text"},"source":["**Learning Objectives:**\n","  * Learn fundamental TensorFlow concepts\n","  * Use the `LinearRegressor` class in TensorFlow to predict median housing price, at the granularity of city blocks, based on one input feature\n","  * Evaluate the accuracy of a model's predictions using Root Mean Squared Error (RMSE)\n","  * Improve the accuracy of a model by tuning its hyperparameters"]},{"cell_type":"markdown","metadata":{"id":"MxiIKhP4E2Zr","colab_type":"text"},"source":["The [data](https://developers.google.com/machine-learning/crash-course/california-housing-data-description) is based on 1990 census data from California."]},{"cell_type":"markdown","metadata":{"id":"6TjLjL9IU80G","colab_type":"text"},"source":["## Setup\n","In this first cell, we'll load the necessary libraries."]},{"cell_type":"code","metadata":{"id":"rVFf5asKE2Zt","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1601097514360,"user_tz":-540,"elapsed":6063,"user":{"displayName":"이성진","photoUrl":"","userId":"11101627820955986098"}},"outputId":"07b5f43a-7eb3-4f8f-b8d8-ccd303cbfc46"},"source":["from __future__ import print_function\n","\n","import math\n","\n","from IPython import display\n","from matplotlib import cm\n","from matplotlib import gridspec\n","from matplotlib import pyplot as plt\n","import numpy as np\n","import pandas as pd\n","from sklearn import metrics\n","%tensorflow_version 1.x\n","import tensorflow as tf\n","from tensorflow.python.data import Dataset\n","\n","tf.logging.set_verbosity(tf.logging.ERROR)\n","pd.options.display.max_rows = 10\n","pd.options.display.float_format = '{:.1f}'.format"],"execution_count":1,"outputs":[{"output_type":"stream","text":["TensorFlow 1.x selected.\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"ipRyUHjhU80Q","colab_type":"text"},"source":["Next, we'll load our data set."]},{"cell_type":"code","metadata":{"id":"9ivCDWnwE2Zx","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":419},"executionInfo":{"status":"ok","timestamp":1601098480683,"user_tz":-540,"elapsed":798,"user":{"displayName":"이성진","photoUrl":"","userId":"11101627820955986098"}},"outputId":"5d687929-bcc2-44ed-edd4-947523db5120"},"source":["california_housing_dataframe = pd.read_csv(\"https://download.mlcc.google.com/mledu-datasets/california_housing_train.csv\", sep=\",\")\n","california_housing_dataframe"],"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>longitude</th>\n","      <th>latitude</th>\n","      <th>housing_median_age</th>\n","      <th>total_rooms</th>\n","      <th>total_bedrooms</th>\n","      <th>population</th>\n","      <th>households</th>\n","      <th>median_income</th>\n","      <th>median_house_value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>-114.3</td>\n","      <td>34.2</td>\n","      <td>15.0</td>\n","      <td>5612.0</td>\n","      <td>1283.0</td>\n","      <td>1015.0</td>\n","      <td>472.0</td>\n","      <td>1.5</td>\n","      <td>66900.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>-114.5</td>\n","      <td>34.4</td>\n","      <td>19.0</td>\n","      <td>7650.0</td>\n","      <td>1901.0</td>\n","      <td>1129.0</td>\n","      <td>463.0</td>\n","      <td>1.8</td>\n","      <td>80100.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>-114.6</td>\n","      <td>33.7</td>\n","      <td>17.0</td>\n","      <td>720.0</td>\n","      <td>174.0</td>\n","      <td>333.0</td>\n","      <td>117.0</td>\n","      <td>1.7</td>\n","      <td>85700.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>-114.6</td>\n","      <td>33.6</td>\n","      <td>14.0</td>\n","      <td>1501.0</td>\n","      <td>337.0</td>\n","      <td>515.0</td>\n","      <td>226.0</td>\n","      <td>3.2</td>\n","      <td>73400.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>-114.6</td>\n","      <td>33.6</td>\n","      <td>20.0</td>\n","      <td>1454.0</td>\n","      <td>326.0</td>\n","      <td>624.0</td>\n","      <td>262.0</td>\n","      <td>1.9</td>\n","      <td>65500.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>16995</th>\n","      <td>-124.3</td>\n","      <td>40.6</td>\n","      <td>52.0</td>\n","      <td>2217.0</td>\n","      <td>394.0</td>\n","      <td>907.0</td>\n","      <td>369.0</td>\n","      <td>2.4</td>\n","      <td>111400.0</td>\n","    </tr>\n","    <tr>\n","      <th>16996</th>\n","      <td>-124.3</td>\n","      <td>40.7</td>\n","      <td>36.0</td>\n","      <td>2349.0</td>\n","      <td>528.0</td>\n","      <td>1194.0</td>\n","      <td>465.0</td>\n","      <td>2.5</td>\n","      <td>79000.0</td>\n","    </tr>\n","    <tr>\n","      <th>16997</th>\n","      <td>-124.3</td>\n","      <td>41.8</td>\n","      <td>17.0</td>\n","      <td>2677.0</td>\n","      <td>531.0</td>\n","      <td>1244.0</td>\n","      <td>456.0</td>\n","      <td>3.0</td>\n","      <td>103600.0</td>\n","    </tr>\n","    <tr>\n","      <th>16998</th>\n","      <td>-124.3</td>\n","      <td>41.8</td>\n","      <td>19.0</td>\n","      <td>2672.0</td>\n","      <td>552.0</td>\n","      <td>1298.0</td>\n","      <td>478.0</td>\n","      <td>2.0</td>\n","      <td>85800.0</td>\n","    </tr>\n","    <tr>\n","      <th>16999</th>\n","      <td>-124.3</td>\n","      <td>40.5</td>\n","      <td>52.0</td>\n","      <td>1820.0</td>\n","      <td>300.0</td>\n","      <td>806.0</td>\n","      <td>270.0</td>\n","      <td>3.0</td>\n","      <td>94600.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>17000 rows × 9 columns</p>\n","</div>"],"text/plain":["       longitude  latitude  ...  median_income  median_house_value\n","0         -114.3      34.2  ...            1.5             66900.0\n","1         -114.5      34.4  ...            1.8             80100.0\n","2         -114.6      33.7  ...            1.7             85700.0\n","3         -114.6      33.6  ...            3.2             73400.0\n","4         -114.6      33.6  ...            1.9             65500.0\n","...          ...       ...  ...            ...                 ...\n","16995     -124.3      40.6  ...            2.4            111400.0\n","16996     -124.3      40.7  ...            2.5             79000.0\n","16997     -124.3      41.8  ...            3.0            103600.0\n","16998     -124.3      41.8  ...            2.0             85800.0\n","16999     -124.3      40.5  ...            3.0             94600.0\n","\n","[17000 rows x 9 columns]"]},"metadata":{"tags":[]},"execution_count":5}]},{"cell_type":"markdown","metadata":{"id":"vVk_qlG6U80j","colab_type":"text"},"source":["We'll randomize the data, just to be sure not to get any pathological ordering effects that might harm the performance of Stochastic Gradient Descent. Additionally, we'll scale `median_house_value` to be in units of thousands, so it can be learned a little more easily with learning rates in a range that we usually use."]},{"cell_type":"code","metadata":{"id":"r0eVyguIU80m","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":419},"executionInfo":{"status":"ok","timestamp":1601098548011,"user_tz":-540,"elapsed":733,"user":{"displayName":"이성진","photoUrl":"","userId":"11101627820955986098"}},"outputId":"c83e2cba-607e-4f0f-b30c-f2f0726e7719"},"source":["california_housing_dataframe = california_housing_dataframe.reindex(\n","    np.random.permutation(california_housing_dataframe.index))\n","california_housing_dataframe[\"median_house_value\"] /= 1000.0\n","california_housing_dataframe"],"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>longitude</th>\n","      <th>latitude</th>\n","      <th>housing_median_age</th>\n","      <th>total_rooms</th>\n","      <th>total_bedrooms</th>\n","      <th>population</th>\n","      <th>households</th>\n","      <th>median_income</th>\n","      <th>median_house_value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>5427</th>\n","      <td>-118.2</td>\n","      <td>34.2</td>\n","      <td>42.0</td>\n","      <td>2076.0</td>\n","      <td>462.0</td>\n","      <td>1641.0</td>\n","      <td>436.0</td>\n","      <td>2.2</td>\n","      <td>149.2</td>\n","    </tr>\n","    <tr>\n","      <th>6359</th>\n","      <td>-118.3</td>\n","      <td>34.1</td>\n","      <td>37.0</td>\n","      <td>196.0</td>\n","      <td>74.0</td>\n","      <td>194.0</td>\n","      <td>68.0</td>\n","      <td>1.2</td>\n","      <td>218.8</td>\n","    </tr>\n","    <tr>\n","      <th>7735</th>\n","      <td>-118.4</td>\n","      <td>34.0</td>\n","      <td>31.0</td>\n","      <td>1893.0</td>\n","      <td>450.0</td>\n","      <td>819.0</td>\n","      <td>426.0</td>\n","      <td>4.3</td>\n","      <td>140.6</td>\n","    </tr>\n","    <tr>\n","      <th>13988</th>\n","      <td>-122.0</td>\n","      <td>37.5</td>\n","      <td>23.0</td>\n","      <td>3170.0</td>\n","      <td>532.0</td>\n","      <td>1446.0</td>\n","      <td>515.0</td>\n","      <td>4.4</td>\n","      <td>291.7</td>\n","    </tr>\n","    <tr>\n","      <th>16706</th>\n","      <td>-122.8</td>\n","      <td>38.6</td>\n","      <td>17.0</td>\n","      <td>5199.0</td>\n","      <td>1023.0</td>\n","      <td>2036.0</td>\n","      <td>890.0</td>\n","      <td>3.2</td>\n","      <td>168.8</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>12331</th>\n","      <td>-121.5</td>\n","      <td>38.5</td>\n","      <td>21.0</td>\n","      <td>4426.0</td>\n","      <td>790.0</td>\n","      <td>1856.0</td>\n","      <td>761.0</td>\n","      <td>4.1</td>\n","      <td>158.3</td>\n","    </tr>\n","    <tr>\n","      <th>742</th>\n","      <td>-117.1</td>\n","      <td>34.0</td>\n","      <td>27.0</td>\n","      <td>1945.0</td>\n","      <td>446.0</td>\n","      <td>859.0</td>\n","      <td>418.0</td>\n","      <td>1.5</td>\n","      <td>126.2</td>\n","    </tr>\n","    <tr>\n","      <th>1429</th>\n","      <td>-117.2</td>\n","      <td>32.7</td>\n","      <td>48.0</td>\n","      <td>2764.0</td>\n","      <td>491.0</td>\n","      <td>978.0</td>\n","      <td>449.0</td>\n","      <td>5.1</td>\n","      <td>432.4</td>\n","    </tr>\n","    <tr>\n","      <th>15695</th>\n","      <td>-122.4</td>\n","      <td>37.8</td>\n","      <td>25.0</td>\n","      <td>4561.0</td>\n","      <td>1474.0</td>\n","      <td>1525.0</td>\n","      <td>1169.0</td>\n","      <td>4.6</td>\n","      <td>500.0</td>\n","    </tr>\n","    <tr>\n","      <th>7312</th>\n","      <td>-118.3</td>\n","      <td>34.0</td>\n","      <td>33.0</td>\n","      <td>1923.0</td>\n","      <td>459.0</td>\n","      <td>1412.0</td>\n","      <td>361.0</td>\n","      <td>5.4</td>\n","      <td>194.1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>17000 rows × 9 columns</p>\n","</div>"],"text/plain":["       longitude  latitude  ...  median_income  median_house_value\n","5427      -118.2      34.2  ...            2.2               149.2\n","6359      -118.3      34.1  ...            1.2               218.8\n","7735      -118.4      34.0  ...            4.3               140.6\n","13988     -122.0      37.5  ...            4.4               291.7\n","16706     -122.8      38.6  ...            3.2               168.8\n","...          ...       ...  ...            ...                 ...\n","12331     -121.5      38.5  ...            4.1               158.3\n","742       -117.1      34.0  ...            1.5               126.2\n","1429      -117.2      32.7  ...            5.1               432.4\n","15695     -122.4      37.8  ...            4.6               500.0\n","7312      -118.3      34.0  ...            5.4               194.1\n","\n","[17000 rows x 9 columns]"]},"metadata":{"tags":[]},"execution_count":7}]},{"cell_type":"markdown","metadata":{"id":"HzzlSs3PtTmt","colab_type":"text"},"source":["## Examine the Data\n","\n","It's a good idea to get to know your data a little bit before you work with it.\n","\n","We'll print out a quick summary of a few useful statistics on each column: count of examples, mean, standard deviation, max, min, and various quantiles."]},{"cell_type":"code","metadata":{"id":"gzb10yoVrydW","colab_type":"code","cellView":"both","colab":{"test":{"output":"ignore","timeout":600},"base_uri":"https://localhost:8080/","height":297},"executionInfo":{"status":"ok","timestamp":1601098561473,"user_tz":-540,"elapsed":746,"user":{"displayName":"이성진","photoUrl":"","userId":"11101627820955986098"}},"outputId":"22226261-1873-48d7-c443-00c6977fae38"},"source":["california_housing_dataframe.describe()"],"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>longitude</th>\n","      <th>latitude</th>\n","      <th>housing_median_age</th>\n","      <th>total_rooms</th>\n","      <th>total_bedrooms</th>\n","      <th>population</th>\n","      <th>households</th>\n","      <th>median_income</th>\n","      <th>median_house_value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>17000.0</td>\n","      <td>17000.0</td>\n","      <td>17000.0</td>\n","      <td>17000.0</td>\n","      <td>17000.0</td>\n","      <td>17000.0</td>\n","      <td>17000.0</td>\n","      <td>17000.0</td>\n","      <td>17000.0</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>-119.6</td>\n","      <td>35.6</td>\n","      <td>28.6</td>\n","      <td>2643.7</td>\n","      <td>539.4</td>\n","      <td>1429.6</td>\n","      <td>501.2</td>\n","      <td>3.9</td>\n","      <td>207.3</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>2.0</td>\n","      <td>2.1</td>\n","      <td>12.6</td>\n","      <td>2179.9</td>\n","      <td>421.5</td>\n","      <td>1147.9</td>\n","      <td>384.5</td>\n","      <td>1.9</td>\n","      <td>116.0</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>-124.3</td>\n","      <td>32.5</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>3.0</td>\n","      <td>1.0</td>\n","      <td>0.5</td>\n","      <td>15.0</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>-121.8</td>\n","      <td>33.9</td>\n","      <td>18.0</td>\n","      <td>1462.0</td>\n","      <td>297.0</td>\n","      <td>790.0</td>\n","      <td>282.0</td>\n","      <td>2.6</td>\n","      <td>119.4</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>-118.5</td>\n","      <td>34.2</td>\n","      <td>29.0</td>\n","      <td>2127.0</td>\n","      <td>434.0</td>\n","      <td>1167.0</td>\n","      <td>409.0</td>\n","      <td>3.5</td>\n","      <td>180.4</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>-118.0</td>\n","      <td>37.7</td>\n","      <td>37.0</td>\n","      <td>3151.2</td>\n","      <td>648.2</td>\n","      <td>1721.0</td>\n","      <td>605.2</td>\n","      <td>4.8</td>\n","      <td>265.0</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>-114.3</td>\n","      <td>42.0</td>\n","      <td>52.0</td>\n","      <td>37937.0</td>\n","      <td>6445.0</td>\n","      <td>35682.0</td>\n","      <td>6082.0</td>\n","      <td>15.0</td>\n","      <td>500.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["       longitude  latitude  ...  median_income  median_house_value\n","count    17000.0   17000.0  ...        17000.0             17000.0\n","mean      -119.6      35.6  ...            3.9               207.3\n","std          2.0       2.1  ...            1.9               116.0\n","min       -124.3      32.5  ...            0.5                15.0\n","25%       -121.8      33.9  ...            2.6               119.4\n","50%       -118.5      34.2  ...            3.5               180.4\n","75%       -118.0      37.7  ...            4.8               265.0\n","max       -114.3      42.0  ...           15.0               500.0\n","\n","[8 rows x 9 columns]"]},"metadata":{"tags":[]},"execution_count":8}]},{"cell_type":"markdown","metadata":{"id":"Lr6wYl2bt2Ep","colab_type":"text"},"source":["## Build the First Model\n","\n","In this exercise, we'll try to predict `median_house_value`, which will be our label (sometimes also called a target). We'll use `total_rooms` as our input feature.\n","\n","**NOTE:** Our data is at the city block level, so this feature represents the total number of rooms in that block.\n","\n","To train our model, we'll use the [LinearRegressor](https://www.tensorflow.org/api_docs/python/tf/estimator/LinearRegressor) interface provided by the TensorFlow [Estimator](https://www.tensorflow.org/get_started/estimator) API. This API takes care of a lot of the low-level model plumbing, and exposes convenient methods for performing model training, evaluation, and inference."]},{"cell_type":"markdown","metadata":{"id":"0cpcsieFhsNI","colab_type":"text"},"source":["### Step 1: Define Features and Configure Feature Columns"]},{"cell_type":"markdown","metadata":{"id":"EL8-9d4ZJNR7","colab_type":"text"},"source":["In order to import our training data into TensorFlow, we need to specify what type of data each feature contains. There are two main types of data we'll use in this and future exercises:\n","\n","* **Categorical Data**: Data that is textual. In this exercise, our housing data set does not contain any categorical features, but examples you might see would be the home style, the words in a real-estate ad.\n","\n","* **Numerical Data**: Data that is a number (integer or float) and that you want to treat as a number. As we will discuss more later sometimes you might want to treat numerical data (e.g., a postal code) as if it were categorical.\n","\n","In TensorFlow, we indicate a feature's data type using a construct called a **feature column**. Feature columns store only a description of the feature data; they do not contain the feature data itself.\n","\n","To start, we're going to use just one numeric input feature, `total_rooms`. The following code pulls the `total_rooms` data from our `california_housing_dataframe` and defines the feature column using `numeric_column`, which specifies its data is numeric:"]},{"cell_type":"code","metadata":{"id":"rhEbFCZ86cDZ","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1601099961295,"user_tz":-540,"elapsed":725,"user":{"displayName":"이성진","photoUrl":"","userId":"11101627820955986098"}},"outputId":"85b9396e-4b1a-4569-cd17-939d2c2630b3"},"source":["# Define the input feature: total_rooms.\n","my_feature = california_housing_dataframe[[\"total_rooms\"]]\n","\n","# Configure a numeric feature column for total_rooms.\n","feature_columns = [tf.feature_column.numeric_column(\"total_rooms\")]\n","\n","#my_feature\n","feature_columns"],"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[NumericColumn(key='total_rooms', shape=(1,), default_value=None, dtype=tf.float32, normalizer_fn=None)]"]},"metadata":{"tags":[]},"execution_count":17}]},{"cell_type":"markdown","metadata":{"id":"K_3S8teX7Rd2","colab_type":"text"},"source":["**NOTE:** The shape of our `total_rooms` data is a one-dimensional array (a list of the total number of rooms for each block). This is the default shape for `numeric_column`, so we don't have to pass it as an argument."]},{"cell_type":"markdown","metadata":{"id":"UMl3qrU5MGV6","colab_type":"text"},"source":["### Step 2: Define the Target"]},{"cell_type":"markdown","metadata":{"id":"cw4nrfcB7kyk","colab_type":"text"},"source":["Next, we'll define our target, which is `median_house_value`. Again, we can pull it from our `california_housing_dataframe`:"]},{"cell_type":"code","metadata":{"id":"l1NvvNkH8Kbt","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":233},"executionInfo":{"status":"ok","timestamp":1601099952646,"user_tz":-540,"elapsed":849,"user":{"displayName":"이성진","photoUrl":"","userId":"11101627820955986098"}},"outputId":"4a61f490-e4c5-4801-bac7-47318ec7e0b8"},"source":["# Define the label.\n","targets = california_housing_dataframe[\"median_house_value\"]\n","targets"],"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["5427    149.2\n","6359    218.8\n","7735    140.6\n","13988   291.7\n","16706   168.8\n","         ... \n","12331   158.3\n","742     126.2\n","1429    432.4\n","15695   500.0\n","7312    194.1\n","Name: median_house_value, Length: 17000, dtype: float64"]},"metadata":{"tags":[]},"execution_count":16}]},{"cell_type":"markdown","metadata":{"id":"4M-rTFHL2UkA","colab_type":"text"},"source":["### Step 3: Configure the LinearRegressor"]},{"cell_type":"markdown","metadata":{"id":"fUfGQUNp7jdL","colab_type":"text"},"source":["Next, we'll configure a linear regression model using LinearRegressor. We'll train this model using the `GradientDescentOptimizer`, which implements Mini-Batch Stochastic Gradient Descent (SGD). The `learning_rate` argument controls the size of the gradient step.\n","\n","**NOTE:** To be safe, we also apply [gradient clipping](https://developers.google.com/machine-learning/glossary/#gradient_clipping) to our optimizer via `clip_gradients_by_norm`. Gradient clipping ensures the magnitude of the gradients do not become too large during training, which can cause gradient descent to fail. "]},{"cell_type":"code","metadata":{"id":"ubhtW-NGU802","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1601105607501,"user_tz":-540,"elapsed":791,"user":{"displayName":"이성진","photoUrl":"","userId":"11101627820955986098"}}},"source":["# Use gradient descent as the optimizer for training the model.\n","my_optimizer = tf.train.GradientDescentOptimizer(learning_rate=0.0000001)                #그래디언트 디센트를 러닝 레이트 0.0000001로 세팅한다.\n","my_optimizer = tf.contrib.estimator.clip_gradients_by_norm(my_optimizer, 5.0)            #그래디언트 클리핑을 clip_norm 값을 5.0으로 세팅하여 적용한다.\n","\n","# Configure the linear regression model with our feature columns and optimizer.\n","# Set a learning rate of 0.0000001 for Gradient Descent.\n","linear_regressor = tf.estimator.LinearRegressor(\n","    feature_columns=feature_columns,\n","    optimizer=my_optimizer\n",")"],"execution_count":19,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"-0IztwdK2f3F","colab_type":"text"},"source":["### Step 4: Define the Input Function"]},{"cell_type":"markdown","metadata":{"id":"S5M5j6xSCHxx","colab_type":"text"},"source":["## To import our California housing data into our `LinearRegressor`, we need to define an input function, which instructs TensorFlow how to preprocess\n","the data, as well as how to batch, shuffle, and repeat it during model training.\n","\n","First, we'll convert our *pandas* feature data into a dict of NumPy arrays. We can then use the TensorFlow [Dataset API](https://www.tensorflow.org/programmers_guide/datasets) to construct a dataset object from our data, and then break\n","our data into batches of `batch_size`, to be repeated for the specified number of epochs (num_epochs). \n","\n","**NOTE:** When the default value of `num_epochs=None` is passed to `repeat()`, the input data will be repeated indefinitely.\n","\n","Next, if `shuffle` is set to `True`, we'll shuffle the data so that it's passed to the model randomly during training. The `buffer_size` argument specifies\n","the size of the dataset from which `shuffle` will randomly sample.\n","\n","Finally, our input function constructs an iterator for the dataset and returns the next batch of data to the LinearRegressor."]},{"cell_type":"code","metadata":{"id":"RKZ9zNcHJtwc","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1601105972389,"user_tz":-540,"elapsed":791,"user":{"displayName":"이성진","photoUrl":"","userId":"11101627820955986098"}}},"source":["def my_input_fn(features, targets, batch_size=1, shuffle=True, num_epochs=None):\n","    \"\"\"Trains a linear regression model of one feature.\n","  \n","    Args:\n","      features: pandas DataFrame of features\n","      targets: pandas DataFrame of targets\n","      batch_size: Size of batches to be passed to the model\n","      shuffle: True or False. Whether to shuffle the data.\n","      num_epochs: Number of epochs for which data should be repeated. None = repeat indefinitely\n","    Returns:\n","      Tuple of (features, labels) for next data batch\n","    \"\"\"\n","  \n","    # Convert pandas data into a dict of np arrays.\n","    features = {key:np.array(value) for key,value in dict(features).items()}\n"," \n","    # Construct a dataset, and configure batching/repeating.\n","    ds = Dataset.from_tensor_slices((features, targets)) # warning: 2GB limit\n","    ds = ds.batch(batch_size).repeat(num_epochs) # num_epochs는 훈련 개수 batch_size는 훈련 한 번 할때 단위\n","    \n","    # Shuffle the data, if specified.\n","    if shuffle:\n","      ds = ds.shuffle(buffer_size=10000)\n","    \n","    # Return the next batch of data.\n","    features, labels = ds.make_one_shot_iterator().get_next()\n","    return features, labels"],"execution_count":20,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"wwa6UeA1V5F_","colab_type":"text"},"source":["**NOTE:** We'll continue to use this same input function in later exercises. For more\n","detailed documentation of input functions and the `Dataset` API, see the [TensorFlow Programmer's Guide](https://www.tensorflow.org/programmers_guide/datasets)."]},{"cell_type":"markdown","metadata":{"id":"4YS50CQb2ooO","colab_type":"text"},"source":["### Step 5: Train the Model"]},{"cell_type":"markdown","metadata":{"id":"yP92XkzhU803","colab_type":"text"},"source":["We can now call `train()` on our `linear_regressor` to train the model. We'll wrap `my_input_fn` in a `lambda`\n","so we can pass in `my_feature` and `targets` as arguments (see this [TensorFlow input function tutorial](https://www.tensorflow.org/get_started/input_fn#passing_input_fn_data_to_your_model) for more details), and to start, we'll\n","train for 100 steps."]},{"cell_type":"code","metadata":{"id":"5M-Kt6w8U803","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1601118965783,"user_tz":-540,"elapsed":1782,"user":{"displayName":"이성진","photoUrl":"","userId":"11101627820955986098"}}},"source":["_ = linear_regressor.train(\n","    input_fn = lambda:my_input_fn(my_feature, targets),\n","    steps=100\n",")"],"execution_count":22,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"7Nwxqxlx2sOv","colab_type":"text"},"source":["### Step 6: Evaluate the Model"]},{"cell_type":"markdown","metadata":{"id":"KoDaF2dlJQG5","colab_type":"text"},"source":["Let's make predictions on that training data, to see how well our model fit it during training.\n","\n","**NOTE:** Training error measures how well your model fits the training data, but it **_does not_** measure how well your model **_generalizes to new data_**. In later exercises, you'll explore how to split your data to evaluate your model's ability to generalize.\n"]},{"cell_type":"code","metadata":{"id":"pDIxp6vcU809","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":52},"executionInfo":{"status":"ok","timestamp":1599402221770,"user_tz":-540,"elapsed":18265,"user":{"displayName":"Jae-Gil Lee","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhUwG08Ejy7eYH5nb61w-F-kiQoQfpLzAbZOFsJyg=s64","userId":"10885684275648248195"}},"outputId":"a7d27cbc-5faf-44d8-c4c3-3c50f39e1456"},"source":["# Create an input function for predictions.\n","# Note: Since we're making just one prediction for each example, we don't \n","# need to repeat or shuffle the data here.\n","prediction_input_fn = lambda: my_input_fn(my_feature, targets, num_epochs=1, shuffle=False)\n","\n","# Call predict() on the linear_regressor to make predictions.\n","predictions = linear_regressor.predict(input_fn=prediction_input_fn)\n","\n","# Format predictions as a NumPy array, so we can calculate error metrics.\n","predictions = np.array([item['predictions'][0] for item in predictions])\n","\n","# Print Mean Squared Error and Root Mean Squared Error.\n","mean_squared_error = metrics.mean_squared_error(predictions, targets)\n","root_mean_squared_error = math.sqrt(mean_squared_error)\n","print(\"Mean Squared Error (on training data): %0.3f\" % mean_squared_error)\n","print(\"Root Mean Squared Error (on training data): %0.3f\" % root_mean_squared_error)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Mean Squared Error (on training data): 56367.025\n","Root Mean Squared Error (on training data): 237.417\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"AKWstXXPzOVz","colab_type":"text"},"source":["Is this a good model? How would you judge how large this error is?\n","\n","Mean Squared Error (MSE) can be hard to interpret, so we often look at Root Mean Squared Error (RMSE)\n","instead.  A nice property of RMSE is that it can be interpreted on the same scale as the original targets.\n","\n","Let's compare the RMSE to the difference of the min and max of our targets:"]},{"cell_type":"code","metadata":{"id":"7UwqGbbxP53O","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":87},"executionInfo":{"status":"ok","timestamp":1599402221772,"user_tz":-540,"elapsed":18223,"user":{"displayName":"Jae-Gil Lee","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhUwG08Ejy7eYH5nb61w-F-kiQoQfpLzAbZOFsJyg=s64","userId":"10885684275648248195"}},"outputId":"db1165d1-2985-407f-bf12-c88dfe26ac91"},"source":["min_house_value = california_housing_dataframe[\"median_house_value\"].min()\n","max_house_value = california_housing_dataframe[\"median_house_value\"].max()\n","min_max_difference = max_house_value - min_house_value\n","\n","print(\"Min. Median House Value: %0.3f\" % min_house_value)\n","print(\"Max. Median House Value: %0.3f\" % max_house_value)\n","print(\"Difference between Min. and Max.: %0.3f\" % min_max_difference)\n","print(\"Root Mean Squared Error: %0.3f\" % root_mean_squared_error)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Min. Median House Value: 14.999\n","Max. Median House Value: 500.001\n","Difference between Min. and Max.: 485.002\n","Root Mean Squared Error: 237.417\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"JigJr0C7Pzit","colab_type":"text"},"source":["Our error spans nearly half the range of the target values. Can we do better?\n","\n","This is the question that nags at every model developer. Let's develop some basic strategies to reduce model error.\n","\n","The first thing we can do is take a look at how well our predictions match our targets, in terms of overall summary statistics."]},{"cell_type":"code","metadata":{"id":"941nclxbzqGH","colab_type":"code","cellView":"both","colab":{"test":{"output":"ignore","timeout":600},"base_uri":"https://localhost:8080/","height":284},"executionInfo":{"status":"ok","timestamp":1599402221772,"user_tz":-540,"elapsed":18204,"user":{"displayName":"Jae-Gil Lee","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhUwG08Ejy7eYH5nb61w-F-kiQoQfpLzAbZOFsJyg=s64","userId":"10885684275648248195"}},"outputId":"ab76a75f-41da-4d57-ab18-d346a729b4a6"},"source":["calibration_data = pd.DataFrame()\n","calibration_data[\"predictions\"] = pd.Series(predictions)\n","calibration_data[\"targets\"] = pd.Series(targets)\n","calibration_data.describe()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>predictions</th>\n","      <th>targets</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>17000.0</td>\n","      <td>17000.0</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>0.1</td>\n","      <td>207.3</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.1</td>\n","      <td>116.0</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.0</td>\n","      <td>15.0</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>0.1</td>\n","      <td>119.4</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>0.1</td>\n","      <td>180.4</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>0.2</td>\n","      <td>265.0</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>1.9</td>\n","      <td>500.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["       predictions  targets\n","count      17000.0  17000.0\n","mean           0.1    207.3\n","std            0.1    116.0\n","min            0.0     15.0\n","25%            0.1    119.4\n","50%            0.1    180.4\n","75%            0.2    265.0\n","max            1.9    500.0"]},"metadata":{"tags":[]},"execution_count":13}]},{"cell_type":"markdown","metadata":{"id":"E2-bf8Hq36y8","colab_type":"text"},"source":["Okay, maybe this information is helpful. How does the mean value compare to the model's RMSE? How about the various quantiles?\n","\n","We can also visualize the data and the line we've learned.  Recall that linear regression on a single feature can be drawn as a line mapping input *x* to output *y*.\n","\n","First, we'll get a uniform random sample of the data so we can make a readable scatter plot."]},{"cell_type":"code","metadata":{"id":"SGRIi3mAU81H","colab_type":"code","colab":{}},"source":["sample = california_housing_dataframe.sample(n=300)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"N-JwuJBKU81J","colab_type":"text"},"source":["Next, we'll plot the line we've learned, drawing from the model's bias term and feature weight, together with the scatter plot. The line will show up red."]},{"cell_type":"code","metadata":{"id":"7G12E76-339G","colab_type":"code","cellView":"both","colab":{"test":{"output":"ignore","timeout":600},"base_uri":"https://localhost:8080/","height":280},"executionInfo":{"status":"ok","timestamp":1599402222165,"user_tz":-540,"elapsed":18564,"user":{"displayName":"Jae-Gil Lee","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhUwG08Ejy7eYH5nb61w-F-kiQoQfpLzAbZOFsJyg=s64","userId":"10885684275648248195"}},"outputId":"33de907d-ef4d-4ed7-c640-2081e40d8211"},"source":["# Get the min and max total_rooms values.\n","x_0 = sample[\"total_rooms\"].min()\n","x_1 = sample[\"total_rooms\"].max()\n","\n","# Retrieve the final weight and bias generated during training.\n","weight = linear_regressor.get_variable_value('linear/linear_model/total_rooms/weights')[0]\n","bias = linear_regressor.get_variable_value('linear/linear_model/bias_weights')\n","\n","# Get the predicted median_house_values for the min and max total_rooms values.\n","y_0 = weight * x_0 + bias \n","y_1 = weight * x_1 + bias\n","\n","# Plot our regression line from (x_0, y_0) to (x_1, y_1).\n","plt.plot([x_0, x_1], [y_0, y_1], c='r')\n","\n","# Label the graph axes.\n","plt.ylabel(\"median_house_value\")\n","plt.xlabel(\"total_rooms\")\n","\n","# Plot a scatter plot from our data sample.\n","plt.scatter(sample[\"total_rooms\"], sample[\"median_house_value\"])\n","\n","# Display graph.\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"t0lRt4USU81L","colab_type":"text"},"source":["This initial line looks way off.  See if you can look back at the summary stats and see the same information encoded there.\n","\n","Together, these initial sanity checks suggest we may be able to find a much better line."]},{"cell_type":"markdown","metadata":{"id":"AZWF67uv0HTG","colab_type":"text"},"source":["## Tweak the Model Hyperparameters\n","For this exercise, we've put all the above code in a single function for convenience. You can call the function with different parameters to see the effect.\n","\n","In this function, we'll proceed in 10 evenly divided periods so that we can observe the model improvement at each period.\n","\n","For each period, we'll compute and graph training loss.  This may help you judge when a model is converged, or if it needs more iterations.\n","\n","We'll also plot the feature weight and bias term values learned by the model over time.  This is another way to see how things converge."]},{"cell_type":"code","metadata":{"id":"wgSMeD5UU81N","colab_type":"code","colab":{}},"source":["def train_model(learning_rate, steps, batch_size, input_feature=\"total_rooms\"):\n","  \"\"\"Trains a linear regression model of one feature.\n","  \n","  Args:\n","    learning_rate: A `float`, the learning rate.\n","    steps: A non-zero `int`, the total number of training steps. A training step\n","      consists of a forward and backward pass using a single batch.\n","    batch_size: A non-zero `int`, the batch size.\n","    input_feature: A `string` specifying a column from `california_housing_dataframe`\n","      to use as input feature.\n","  \"\"\"\n","  \n","  periods = 10\n","  steps_per_period = steps / periods\n","\n","  my_feature = input_feature\n","  my_feature_data = california_housing_dataframe[[my_feature]]\n","  my_label = \"median_house_value\"\n","  targets = california_housing_dataframe[my_label]\n","\n","  # Create feature columns.\n","  feature_columns = [tf.feature_column.numeric_column(my_feature)]\n","  \n","  # Create input functions.\n","  training_input_fn = lambda:my_input_fn(my_feature_data, targets, batch_size=batch_size)\n","  prediction_input_fn = lambda: my_input_fn(my_feature_data, targets, num_epochs=1, shuffle=False)\n","  \n","  # Create a linear regressor object.\n","  my_optimizer = tf.train.GradientDescentOptimizer(learning_rate=learning_rate)\n","  my_optimizer = tf.contrib.estimator.clip_gradients_by_norm(my_optimizer, 5.0)\n","  linear_regressor = tf.estimator.LinearRegressor(\n","      feature_columns=feature_columns,\n","      optimizer=my_optimizer\n","  )\n","\n","  # Set up to plot the state of our model's line each period.\n","  plt.figure(figsize=(15, 6))\n","  plt.subplot(1, 2, 1)\n","  plt.title(\"Learned Line by Period\")\n","  plt.ylabel(my_label)\n","  plt.xlabel(my_feature)\n","  sample = california_housing_dataframe.sample(n=300)\n","  plt.scatter(sample[my_feature], sample[my_label])\n","  colors = [cm.coolwarm(x) for x in np.linspace(-1, 1, periods)]\n","\n","  # Train the model, but do so inside a loop so that we can periodically assess\n","  # loss metrics.\n","  print(\"Training model...\")\n","  print(\"RMSE (on training data):\")\n","  root_mean_squared_errors = []\n","  for period in range (0, periods):\n","    # Train the model, starting from the prior state.\n","    linear_regressor.train(\n","        input_fn=training_input_fn,\n","        steps=steps_per_period\n","    )\n","    # Take a break and compute predictions.\n","    predictions = linear_regressor.predict(input_fn=prediction_input_fn)\n","    predictions = np.array([item['predictions'][0] for item in predictions])\n","    \n","    # Compute loss.\n","    root_mean_squared_error = math.sqrt(\n","        metrics.mean_squared_error(predictions, targets))\n","    # Occasionally print the current loss.\n","    print(\"  period %02d : %0.2f\" % (period, root_mean_squared_error))\n","    # Add the loss metrics from this period to our list.\n","    root_mean_squared_errors.append(root_mean_squared_error)\n","    # Finally, track the weights and biases over time.\n","    # Apply some math to ensure that the data and line are plotted neatly.\n","    y_extents = np.array([0, sample[my_label].max()])\n","    \n","    weight = linear_regressor.get_variable_value('linear/linear_model/%s/weights' % input_feature)[0]\n","    bias = linear_regressor.get_variable_value('linear/linear_model/bias_weights')\n","\n","    x_extents = (y_extents - bias) / weight\n","    x_extents = np.maximum(np.minimum(x_extents,\n","                                      sample[my_feature].max()),\n","                           sample[my_feature].min())\n","    y_extents = weight * x_extents + bias\n","    plt.plot(x_extents, y_extents, color=colors[period]) \n","  print(\"Model training finished.\")\n","\n","  # Output a graph of loss metrics over periods.\n","  plt.subplot(1, 2, 2)\n","  plt.ylabel('RMSE')\n","  plt.xlabel('Periods')\n","  plt.title(\"Root Mean Squared Error vs. Periods\")\n","  plt.tight_layout()\n","  plt.plot(root_mean_squared_errors)\n","\n","  # Output a table with calibration data.\n","  calibration_data = pd.DataFrame()\n","  calibration_data[\"predictions\"] = pd.Series(predictions)\n","  calibration_data[\"targets\"] = pd.Series(targets)\n","  display.display(calibration_data.describe())\n","\n","  print(\"Final RMSE (on training data): %0.2f\" % root_mean_squared_error)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"kg8A4ArBU81Q","colab_type":"text"},"source":["## Task 1:  Achieve an RMSE of 180 or Below\n","\n","Tweak the model hyperparameters to improve loss and better match the target distribution.\n","If, after 5 minutes or so, you're having trouble beating a RMSE of 180, check the solution for a possible combination."]},{"cell_type":"code","metadata":{"id":"UzoZUSdLIolF","colab_type":"code","cellView":"both","colab":{"test":{"output":"ignore","timeout":600},"base_uri":"https://localhost:8080/","height":954},"executionInfo":{"status":"ok","timestamp":1599402310316,"user_tz":-540,"elapsed":106675,"user":{"displayName":"Jae-Gil Lee","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhUwG08Ejy7eYH5nb61w-F-kiQoQfpLzAbZOFsJyg=s64","userId":"10885684275648248195"}},"outputId":"d773d36c-45bf-4c83-cac2-e4dc2d53c05b"},"source":["train_model(\n","    learning_rate=0.00001,\n","    steps=100,\n","    batch_size=1\n",")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Training model...\n","RMSE (on training data):\n","  period 00 : 236.32\n","  period 01 : 235.11\n","  period 02 : 233.90\n","  period 03 : 232.70\n","  period 04 : 231.50\n","  period 05 : 230.31\n","  period 06 : 229.13\n","  period 07 : 227.96\n","  period 08 : 226.79\n","  period 09 : 225.63\n","Model training finished.\n"],"name":"stdout"},{"output_type":"display_data","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>predictions</th>\n","      <th>targets</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>17000.0</td>\n","      <td>17000.0</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>13.2</td>\n","      <td>207.3</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>10.9</td>\n","      <td>116.0</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.0</td>\n","      <td>15.0</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>7.3</td>\n","      <td>119.4</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>10.6</td>\n","      <td>180.4</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>15.8</td>\n","      <td>265.0</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>189.7</td>\n","      <td>500.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["       predictions  targets\n","count      17000.0  17000.0\n","mean          13.2    207.3\n","std           10.9    116.0\n","min            0.0     15.0\n","25%            7.3    119.4\n","50%           10.6    180.4\n","75%           15.8    265.0\n","max          189.7    500.0"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["Final RMSE (on training data): 225.63\n"],"name":"stdout"},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1080x432 with 2 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"ajVM7rkoYXeL","colab_type":"text"},"source":["### Solution\n","\n","Click below for one possible solution."]},{"cell_type":"code","metadata":{"id":"T3zmldDwYy5c","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":954},"executionInfo":{"status":"ok","timestamp":1599402404876,"user_tz":-540,"elapsed":201221,"user":{"displayName":"Jae-Gil Lee","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhUwG08Ejy7eYH5nb61w-F-kiQoQfpLzAbZOFsJyg=s64","userId":"10885684275648248195"}},"outputId":"93ae0d61-faca-411c-90ce-dd1e211cb060"},"source":["train_model(\n","    learning_rate=0.00002,\n","    steps=500,\n","    batch_size=5\n",")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Training model...\n","RMSE (on training data):\n","  period 00 : 225.63\n","  period 01 : 214.42\n","  period 02 : 204.04\n","  period 03 : 194.62\n","  period 04 : 186.92\n","  period 05 : 180.27\n","  period 06 : 175.44\n","  period 07 : 171.74\n","  period 08 : 169.46\n","  period 09 : 167.79\n","Model training finished.\n"],"name":"stdout"},{"output_type":"display_data","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>predictions</th>\n","      <th>targets</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>17000.0</td>\n","      <td>17000.0</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>113.7</td>\n","      <td>207.3</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>93.7</td>\n","      <td>116.0</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.1</td>\n","      <td>15.0</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>62.9</td>\n","      <td>119.4</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>91.5</td>\n","      <td>180.4</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>135.5</td>\n","      <td>265.0</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>1631.3</td>\n","      <td>500.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["       predictions  targets\n","count      17000.0  17000.0\n","mean         113.7    207.3\n","std           93.7    116.0\n","min            0.1     15.0\n","25%           62.9    119.4\n","50%           91.5    180.4\n","75%          135.5    265.0\n","max         1631.3    500.0"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["Final RMSE (on training data): 167.79\n"],"name":"stdout"},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1080x432 with 2 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"M8H0_D4vYa49","colab_type":"text"},"source":["This is just one possible configuration; there may be other combinations of settings that also give good results. Note that in general, this exercise isn't about finding the *one best* setting, but to help build your intutions about how tweaking the model configuration affects prediction quality."]},{"cell_type":"markdown","metadata":{"id":"QU5sLyYTqzqL","colab_type":"text"},"source":["### Is There a Standard Heuristic for Model Tuning?\n","\n","This is a commonly asked question. The short answer is that the effects of different hyperparameters are data dependent. So there are no hard-and-fast rules; you'll need to test on your data.\n","\n","That said, here are a few rules of thumb that may help guide you:\n","\n"," * Training error should steadily decrease, steeply at first, and should eventually plateau as training converges.\n"," * If the training has not converged, try running it for longer.\n"," * If the training error decreases too slowly, increasing the learning rate may help it decrease faster.\n","   * But sometimes the exact opposite may happen if the learning rate is too high.\n"," * If the training error varies wildly, try decreasing the learning rate.\n","   * Lower learning rate plus larger number of steps or larger batch size is often a good combination.\n"," * Very small batch sizes can also cause instability.  First try larger values like 100 or 1000, and decrease until you see degradation.\n","\n","Again, never go strictly by these rules of thumb, because the effects are data dependent.  Always experiment and verify."]},{"cell_type":"markdown","metadata":{"id":"GpV-uF_cBCBU","colab_type":"text"},"source":["## Task 2: Try a Different Feature\n","\n","See if you can do any better by replacing the `total_rooms` feature with the `population` feature.\n","\n","Don't take more than 5 minutes on this portion."]},{"cell_type":"code","metadata":{"id":"YMyOxzb0ZlAH","colab_type":"code","colab":{}},"source":["# YOUR CODE HERE"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"ci1ISxxrZ7v0","colab_type":"text"},"source":["### Solution\n","\n","Click below for one possible solution."]},{"cell_type":"code","metadata":{"id":"SjdQQCduZ7BV","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":244},"executionInfo":{"status":"error","timestamp":1600338799237,"user_tz":-540,"elapsed":606,"user":{"displayName":"이성진","photoUrl":"","userId":"11101627820955986098"}},"outputId":"ab49e58c-7120-4105-8b48-385c94028560"},"source":["train_model(\n","    learning_rate=0.00002,\n","    steps=1000,\n","    batch_size=5,\n","    input_feature=\"population\"\n",")"],"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-4-3d726ee869b2>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m train_model(\n\u001b[0m\u001b[1;32m      2\u001b[0m     \u001b[0mlearning_rate\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0.00002\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m     \u001b[0msteps\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1000\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m     \u001b[0mbatch_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m5\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m     \u001b[0minput_feature\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"population\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'train_model' is not defined"]}]}]}